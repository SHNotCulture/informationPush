package com.eparking.informationPush.dao;

import com.eparking.informationPush.dao.sqlProvider.ParkInOutCacheSqlProvider;
import com.eparking.informationPush.entity.system.ParkInOutCache;
import com.eparking.informationPush.entity.system.ParkInOutCacheCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ParkInOutCacheMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @SelectProvider(type= ParkInOutCacheSqlProvider.class, method="countByExample")
    long countByExample(ParkInOutCacheCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @DeleteProvider(type=ParkInOutCacheSqlProvider.class, method="deleteByExample")
    int deleteByExample(ParkInOutCacheCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @Delete({
        "delete from park_in_out_cache",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @Insert({
        "insert into park_in_out_cache (id, actual_pay, ",
        "before_pay, car_nature, ",
        "charge_type, coupon, ",
        "e_pay_type, in_car_plate, ",
        "in_car_plate_color, in_pic_path, ",
        "in_port_id, in_port_name, ",
        "in_time, need_pay, ",
        "occur_time, order_id, ",
        "out_car_plate, out_car_plate_color, ",
        "out_pic_path, out_port_id, ",
        "out_port_name, out_time, ",
        "out_type, park_id, ",
        "qpass_pay, route_id)",
        "values (#{id,jdbcType=VARCHAR}, #{actualPay,jdbcType=DOUBLE}, ",
        "#{beforePay,jdbcType=DOUBLE}, #{carNature,jdbcType=INTEGER}, ",
        "#{chargeType,jdbcType=INTEGER}, #{coupon,jdbcType=DOUBLE}, ",
        "#{ePayType,jdbcType=INTEGER}, #{inCarPlate,jdbcType=VARCHAR}, ",
        "#{inCarPlateColor,jdbcType=VARCHAR}, #{inPicPath,jdbcType=VARCHAR}, ",
        "#{inPortId,jdbcType=INTEGER}, #{inPortName,jdbcType=VARCHAR}, ",
        "#{inTime,jdbcType=VARCHAR}, #{needPay,jdbcType=DOUBLE}, ",
        "#{occurTime,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, ",
        "#{outCarPlate,jdbcType=VARCHAR}, #{outCarPlateColor,jdbcType=VARCHAR}, ",
        "#{outPicPath,jdbcType=VARCHAR}, #{outPortId,jdbcType=INTEGER}, ",
        "#{outPortName,jdbcType=VARCHAR}, #{outTime,jdbcType=VARCHAR}, ",
        "#{outType,jdbcType=INTEGER}, #{parkId,jdbcType=INTEGER}, ",
        "#{qpassPay,jdbcType=DOUBLE}, #{routeId,jdbcType=INTEGER})"
    })
    int insert(ParkInOutCache record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @InsertProvider(type=ParkInOutCacheSqlProvider.class, method="insertSelective")
    int insertSelective(ParkInOutCache record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @SelectProvider(type=ParkInOutCacheSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="actual_pay", property="actualPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="before_pay", property="beforePay", jdbcType=JdbcType.DOUBLE),
        @Result(column="car_nature", property="carNature", jdbcType=JdbcType.INTEGER),
        @Result(column="charge_type", property="chargeType", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon", property="coupon", jdbcType=JdbcType.DOUBLE),
        @Result(column="e_pay_type", property="ePayType", jdbcType=JdbcType.INTEGER),
        @Result(column="in_car_plate", property="inCarPlate", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_car_plate_color", property="inCarPlateColor", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_pic_path", property="inPicPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_port_id", property="inPortId", jdbcType=JdbcType.INTEGER),
        @Result(column="in_port_name", property="inPortName", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_time", property="inTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="need_pay", property="needPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="occur_time", property="occurTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_car_plate", property="outCarPlate", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_car_plate_color", property="outCarPlateColor", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_pic_path", property="outPicPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_port_id", property="outPortId", jdbcType=JdbcType.INTEGER),
        @Result(column="out_port_name", property="outPortName", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_time", property="outTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_type", property="outType", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="qpass_pay", property="qpassPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="route_id", property="routeId", jdbcType=JdbcType.INTEGER)
    })
    List<ParkInOutCache> selectByExample(ParkInOutCacheCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, actual_pay, before_pay, car_nature, charge_type, coupon, e_pay_type, in_car_plate, ",
        "in_car_plate_color, in_pic_path, in_port_id, in_port_name, in_time, need_pay, ",
        "occur_time, order_id, out_car_plate, out_car_plate_color, out_pic_path, out_port_id, ",
        "out_port_name, out_time, out_type, park_id, qpass_pay, route_id",
        "from park_in_out_cache",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="actual_pay", property="actualPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="before_pay", property="beforePay", jdbcType=JdbcType.DOUBLE),
        @Result(column="car_nature", property="carNature", jdbcType=JdbcType.INTEGER),
        @Result(column="charge_type", property="chargeType", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon", property="coupon", jdbcType=JdbcType.DOUBLE),
        @Result(column="e_pay_type", property="ePayType", jdbcType=JdbcType.INTEGER),
        @Result(column="in_car_plate", property="inCarPlate", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_car_plate_color", property="inCarPlateColor", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_pic_path", property="inPicPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_port_id", property="inPortId", jdbcType=JdbcType.INTEGER),
        @Result(column="in_port_name", property="inPortName", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_time", property="inTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="need_pay", property="needPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="occur_time", property="occurTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_car_plate", property="outCarPlate", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_car_plate_color", property="outCarPlateColor", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_pic_path", property="outPicPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_port_id", property="outPortId", jdbcType=JdbcType.INTEGER),
        @Result(column="out_port_name", property="outPortName", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_time", property="outTime", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_type", property="outType", jdbcType=JdbcType.INTEGER),
        @Result(column="park_id", property="parkId", jdbcType=JdbcType.INTEGER),
        @Result(column="qpass_pay", property="qpassPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="route_id", property="routeId", jdbcType=JdbcType.INTEGER)
    })
    ParkInOutCache selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ParkInOutCacheSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ParkInOutCache record, @Param("example") ParkInOutCacheCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ParkInOutCacheSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ParkInOutCache record, @Param("example") ParkInOutCacheCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @UpdateProvider(type=ParkInOutCacheSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ParkInOutCache record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table park_in_out_cache
     *
     * @mbg.generated
     */
    @Update({
        "update park_in_out_cache",
        "set actual_pay = #{actualPay,jdbcType=DOUBLE},",
          "before_pay = #{beforePay,jdbcType=DOUBLE},",
          "car_nature = #{carNature,jdbcType=INTEGER},",
          "charge_type = #{chargeType,jdbcType=INTEGER},",
          "coupon = #{coupon,jdbcType=DOUBLE},",
          "e_pay_type = #{ePayType,jdbcType=INTEGER},",
          "in_car_plate = #{inCarPlate,jdbcType=VARCHAR},",
          "in_car_plate_color = #{inCarPlateColor,jdbcType=VARCHAR},",
          "in_pic_path = #{inPicPath,jdbcType=VARCHAR},",
          "in_port_id = #{inPortId,jdbcType=INTEGER},",
          "in_port_name = #{inPortName,jdbcType=VARCHAR},",
          "in_time = #{inTime,jdbcType=VARCHAR},",
          "need_pay = #{needPay,jdbcType=DOUBLE},",
          "occur_time = #{occurTime,jdbcType=VARCHAR},",
          "order_id = #{orderId,jdbcType=VARCHAR},",
          "out_car_plate = #{outCarPlate,jdbcType=VARCHAR},",
          "out_car_plate_color = #{outCarPlateColor,jdbcType=VARCHAR},",
          "out_pic_path = #{outPicPath,jdbcType=VARCHAR},",
          "out_port_id = #{outPortId,jdbcType=INTEGER},",
          "out_port_name = #{outPortName,jdbcType=VARCHAR},",
          "out_time = #{outTime,jdbcType=VARCHAR},",
          "out_type = #{outType,jdbcType=INTEGER},",
          "park_id = #{parkId,jdbcType=INTEGER},",
          "qpass_pay = #{qpassPay,jdbcType=DOUBLE},",
          "route_id = #{routeId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ParkInOutCache record);
}